name: Update .spec

on:
  repository_dispatch:
    types: [new-release]
  workflow_dispatch:

jobs:
  update-spec:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Wait for FajoX to release update
        run: |
          echo "Waiting for 2 hours..."
          sleep 7200

      - name: Fetch latest release tag
        id: fetch_tag
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/FajoX1/fagramdesktop/releases/latest | jq -r .tag_name)
          if [[ -z "$latest_tag" || "$latest_tag" == "null" ]]; then
            echo "Error: Failed to fetch the latest tag." >&2
            exit 1
          fi
          echo "Latest tag: $latest_tag"
          # Strip 'v' prefix if present and set it to GITHUB_ENV
          sanitized_tag="${latest_tag#v}"
          echo "Sanitized tag: $sanitized_tag"
          echo "tag=$sanitized_tag" >> $GITHUB_ENV

      - name: Check for tarball availability
        id: check_tarball
        run: |
          version="${{ env.tag }}"
          tarball_url="https://github.com/FajoX1/fagramdesktop/releases/download/v${version}/fagram-v${version}.tar.gz"
          echo "Checking availability of tarball: $tarball_url"
          retries=5
          interval=30  # Reduced to 30 seconds for faster testing; adjust as needed
          for ((i=1; i<=retries; i++)); do
            echo "Attempt $i of $retries..."
            response=$(curl -L -o /dev/null -s -w "%{http_code}" "$tarball_url")
            echo "HTTP response code: $response"
            if [[ "$response" == "200" ]]; then
              echo "Tarball is available: $tarball_url"
              echo "tarball_available=true" >> $GITHUB_ENV
              exit 0
            else
              echo "Tarball not found (HTTP $response). Retrying in $interval seconds..."
              sleep $interval
            fi
          done
          echo "Error: Tarball not available after $retries attempts." >&2
          echo "tarball_available=false" >> $GITHUB_ENV
          exit 1

      - name: Check for version update
        id: check_update
        if: env.tarball_available == 'true'
        run: |
          current_version=$(grep -E '^Version:' fagram.spec | awk '{print $2}' | tr -d '[:space:]')
          echo "Current version: $current_version"
          echo "Latest tag (sanitized): ${{ env.tag }}"
          if [[ "$current_version" == "${{ env.tag }}" ]]; then
            echo "The version is up-to-date."
            echo "update_needed=false" >> $GITHUB_ENV
          else
            echo "A new version is available."
            echo "update_needed=true" >> $GITHUB_ENV
          fi

      - name: Update .spec file
        if: env.update_needed == 'true' && env.tarball_available == 'true'
        run: |
          git clone https://${{ secrets.PAT }}@github.com/burhancodes/fagram-rpm repo
          cd repo
          sed -i "s/^Version:.*/Version:        ${{ env.tag }}/" fagram.spec
          git config --global user.name "burhanverse"
          git config --global user.email "contact@burhanverse.eu.org"
          git add fagram.spec
          git commit -m "Updated to version ${{ env.tag }}"
          git push

  trigger-deb:
    runs-on: ubuntu-latest
    needs: update-spec
    steps:
      - name: Trigger repository dispatch event
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.DEBPAT }}
          repository: burhancodes/fagram-deb
          event-type: new-release
