name: Update .spec

on:
  repository_dispatch:
    types: [new-release]
  workflow_dispatch:

jobs:
  download-artifacts:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup GH CLI
        run: |
          sudo apt update
          sudo apt install gh
          echo "${{ secrets.PAT }}" | gh auth login --with-token

      - name: Download and Extract Artifacts
        env:
          SOURCE_REPO: "FajoX1/fagramdesktop"
          WORKFLOW_NAME: "linux"
        run: |
          RUN_ID=$(gh run list \
            --repo $SOURCE_REPO \
            --workflow $WORKFLOW_NAME \
            --status success \
            --limit 1 \
            --json databaseId \
            -q '.[0].databaseId')

          echo "Downloading artifacts from run ID: $RUN_ID"
          
          gh run download $RUN_ID \
            --repo $SOURCE_REPO \
            --dir artifacts_download

      - name: Create Release with Tarball
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          TARBALL_PATH=$(find artifacts_download -name "*.tar.gz" -type f)
          RELEASE_TAG=$(basename "$TARBALL_PATH" .tar.gz | grep -o 'v[0-9]\+\.[0-9]\+\.[0-9]\+')
          
          echo "Extracted release tag: $RELEASE_TAG"
          
          if gh release view "$RELEASE_TAG" --repo ${{ github.repository }} > /dev/null 2>&1; then
            echo "Deleting existing release with tag $RELEASE_TAG..."
            gh release delete "$RELEASE_TAG" --repo ${{ github.repository }} --yes
          fi
          
          echo "Creating new release with tag $RELEASE_TAG..."
          gh release create "$RELEASE_TAG" \
            "$TARBALL_PATH" \
            --title "Prebuilt Tarball - $RELEASE_TAG" \
            --notes "Latest prebuilt tarball from FajoX1/fagramdesktop linux workflow" \
            --repo ${{ github.repository }}

  update-spec:
    runs-on: ubuntu-24.04
    needs: download-artifacts

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch latest release tag
        id: fetch_tag
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/FajoX1/fagramdesktop/releases/latest | jq -r .tag_name)
          if [[ -z "$latest_tag" || "$latest_tag" == "null" ]]; then
            echo "Error: Failed to fetch the latest tag." >&2
            exit 1
          fi
          echo "Latest tag: $latest_tag"
          # Strip 'v' prefix if present and set it to GITHUB_ENV
          sanitized_tag="${latest_tag#v}"
          echo "Sanitized tag: $sanitized_tag"
          echo "tag=$sanitized_tag" >> $GITHUB_ENV

      - name: Check for version update
        id: check_update
        if: env.tarball_available == 'true'
        run: |
          current_version=$(grep -E '^Version:' fagram.spec | awk '{print $2}' | tr -d '[:space:]')
          echo "Current version: $current_version"
          echo "Latest tag (sanitized): ${{ env.tag }}"
          if [[ "$current_version" == "${{ env.tag }}" ]]; then
            echo "The version is up-to-date."
            echo "update_needed=false" >> $GITHUB_ENV
          else
            echo "A new version is available."
            echo "update_needed=true" >> $GITHUB_ENV
          fi

      - name: Update .spec file
        if: env.update_needed == 'true' && env.tarball_available == 'true'
        run: |
          git clone https://${{ secrets.PAT }}@github.com/burhancodes/fagram-rpm repo
          cd repo
          sed -i "s/^Version:.*/Version:        ${{ env.tag }}/" fagram.spec
          git config --global user.name "burhanverse"
          git config --global user.email "contact@burhanverse.eu.org"
          git add fagram.spec
          git commit -m "Updated to version ${{ env.tag }}"
          git push

  trigger-deb:
    runs-on: ubuntu-latest
    needs: update-spec
    steps:
      - name: Trigger repository dispatch event
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.DEBPAT }}
          repository: burhancodes/fagram-deb
          event-type: new-release
